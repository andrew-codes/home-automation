name: Manual Deploy
on:
  repository_dispatch:
    types:
      - manual-deploy
jobs:
  deploy:
    name: Manual Deployment
    runs-on: home-automation
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Extract node version from package.json
        uses: sergeysova/jq-action@v2
        id: node_version
        with:
          cmd: jq .engines.node package.json -r | sed -e 's/"//g' | sed -e 's/>=//g'
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "${{ steps.node_version.outputs.value }}"
      - name: Use Yarn
        run: corepack enable
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Install deps
        run: yarn
      - name: Prepare
        run: yarn nx run-many --target=prepare --parallel --all
        env:
          ONEPASSWORD_TOKEN: ${{ secrets.ONEPASSWORD_TOKEN }}
          ONEPASSWORD_SERVER_URL: ${{ secrets.ONEPASSWORD_SERVER_URL }}
          ONEPASSWORD_VAULT_ID: ${{ secrets.ONEPASSWORD_VAULT_ID }}
      - name: Install jsonnet plugins
        run: jb install
      - name: Deploy apps
        run: yarn nx run-many --target=deploy --parallel --projects=${{ github.event.client_payload.projects }} --exclude=docker-registry,k8s,openvpn,pihole --verbose
        env:
          CODECOV_TOKEN: ${{ secrets.CODE_COV_TOKEN }}
          ONEPASSWORD_TOKEN: ${{ secrets.ONEPASSWORD_TOKEN }}
          ONEPASSWORD_SERVER_URL: ${{ secrets.ONEPASSWORD_SERVER_URL }}
          ONEPASSWORD_VAULT_ID: ${{ secrets.ONEPASSWORD_VAULT_ID }}
          NODE_ENV: production
      - name: Remove disk pressure taint
        run: ./scripts/bin/remove-evicted-pods.sh || true
