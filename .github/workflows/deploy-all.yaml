name: "Deploy all"

on: workflow_dispatch

jobs:
  deploy:
    name: Compile, Push, Deploy
    runs-on: amd64-runner
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Read .nvmrc
        run: echo "##[set-output name=NVMRC;]$(cat .nvmrc)"
      - name: Use Node.js (.nvmrc)
        uses: actions/setup-node@v1
        with:
          node-version: "${{ steps.nvm.outputs.NVMRC }}"
      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: .yarn-cache
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}-v3
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install deps
        run: yarn
        env:
          YARN_CACHE_FOLDER: ".yarn-cache"
      - name: Patch
        run: yarn patch
      - name: Compile apps
        run: yarn lerna run compile --stream
        env:
          MQTT_CONNECTION: ${{ secrets.MQTT_CONNECTION }}
          GAMING_ROOM_GAMING_PC_USERNAME: "${{ secrets.GAMING_ROOM_GAMING_PC_USERNAME }}"
      - name: Run tests
        run: yarn test
      - name: Build and push images
        run: yarn lerna run image/push --stream
      - name: Deploy
        run: yarn lerna run deploy --stream --ignore @ha/lets-encrypt --ignore @ha/docker-registry --ignore @ha/k8s --ignore @ha/inlets --ignore --ignore @ha/openvpn-as --ignore @ha/pihole --ignore @ha/vault --ignore @ha/velero @ha/playnite-game-data-exporter --include-filtered-dependencies
        env:
          VAULT_TOKEN: "${{ secrets.VAULT_TOKEN }}"
          VAULT_ADDR: "${{ secrets.VAULT_ADDR }}"
          MACHINE_PASSWORD: "${{ secrets.MACHINE_PASSWORD }}"
          GAMING_ROOM_GAMING_PC_USERNAME: "${{ secrets.GAMING_ROOM_GAMING_PC_USERNAME }}"
          GAMING_ROOM_GAMING_PC_MAC: "${{ secrets.GAMING_ROOM_GAMING_PC_MAC }}"
      - name: Remove disk pressure taint
        run: ./scripts/bin/remove-evicted-pods.sh
