name: "Deploy all"

on: workflow_dispatch

jobs:
  deploy:
    name: Compile, Push, Deploy
    runs-on: amd64-runner
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Read .nvmrc
        run: echo "##[set-output name=NVMRC;]$(cat .nvmrc)"
      - name: Use Node.js (.nvmrc)
        uses: actions/setup-node@v1
        with:
          node-version: "${{ steps.nvm.outputs.NVMRC }}"
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}-v3
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install deps
        run: yarn
        env:
          AZURE_KEY_VAULT_NAME: ${{ secrets.AZURE_KEY_VAULT_NAME }}
      - name: Build executors
        run: yarn nx run prepare
      - name: Run all tests
        run: yarn test/all
      - name: Coverage
        run: yarn test/coverage/all
        if: always()
      - name: Deploy all apps
        run: yarn deploy/all --exclude @ha/lets-encrypt --exclude @ha/github-action-runners --exclude @ha/docker-registry --exclude @ha/k8s --exclude @ha/openvpn-as --exclude @ha/pihole --exclude @ha/azure-key-vault
        env:
          AZURE_SERVICE_PRINCIPAL_APP_ID: "${{ secrets.AZURE_SERVICE_PRINCIPAL_APP_ID }}"
          AZURE_SERVICE_PRINCIPAL_PASSWORD: "${{ secrets.AZURE_SERVICE_PRINCIPAL_PASSWORD }}"
          AZURE_SERVICE_PRINCIPAL_TENANT: "${{ secrets.AZURE_SERVICE_PRINCIPAL_TENANT }}"
          AZURE_SUBSCRIPTION_ID: "${{ secrets.AZURE_SUBSCRIPTION_ID }}"
          DOCKER_BUILDKIT: 1
          GAMING_ROOM_GAMING_PC_MAC: "${{ secrets.GAMING_ROOM_GAMING_PC_MAC }}"
          GAMING_ROOM_GAMING_PC_USERNAME: "${{ secrets.GAMING_ROOM_GAMING_PC_USERNAME }}"
          MACHINE_PASSWORD: "${{ secrets.MACHINE_PASSWORD }}"
          MQTT_CONNECTION: ${{ secrets.MQTT_CONNECTION }}
          NODE_ENV: production
      - name: Remove disk pressure taint
        run: ./scripts/bin/remove-evicted-pods.sh || true
