name: "Deploy to Production"

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Compile, Test, Push, Deploy
    runs-on: amd64-runner
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Read .nvmrc
        run: echo "##[set-output name=NVMRC;]$(cat .nvmrc)"
      - name: Use Node.js (.nvmrc)
        uses: actions/setup-node@v1
        with:
          node-version: "${{ steps.nvm.outputs.NVMRC }}"
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}-v3
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install deps
        run: yarn
      - name: Patch
        run: yarn patch
      - name: Compile apps
        run: yarn lerna run compile --stream --include-dependents --since HEAD~
        env:
          MQTT_CONNECTION: ${{ secrets.MQTT_CONNECTION }}
          GAMING_ROOM_GAMING_PC_USERNAME: "${{ secrets.GAMING_ROOM_GAMING_PC_USERNAME }}"
      - name: Run tests
        run: yarn test
      - name: Build and push images
        run: yarn lerna run image/push --stream --since HEAD~
        env:
          DOCKER_BUILDKIT: 1
      - name: Deploy
        run: yarn lerna run deploy --stream --ignore @ha/lets-encrypt --ignore @ha/docker-registry --ignore @ha/k8s --ignore @ha/inlets --ignore @ha/openvpn-as --ignore @ha/pihole --ignore @ha/azure-key-vault --ignore @ha/velero --include-filtered-dependencies --since HEAD~
        env:
          AZURE_SUBSCRIPTION_ID: "${{ secrets.AZURE_SUBSCRIPTION_ID }}"
          AZURE_SERVICE_PRINCIPAL_PASSWORD: "${{ secrets.AZURE_SERVICE_PRINCIPAL_PASSWORD }}"
          AZURE_SERVICE_PRINCIPAL_APP_ID: "${{ secrets.AZURE_SERVICE_PRINCIPAL_APP_ID }}"
          AZURE_SERVICE_PRINCIPAL_TENANT: "${{ secrets.AZURE_SERVICE_PRINCIPAL_TENANT }}"
          MACHINE_PASSWORD: "${{ secrets.MACHINE_PASSWORD }}"
          GAMING_ROOM_GAMING_PC_USERNAME: "${{ secrets.GAMING_ROOM_GAMING_PC_USERNAME }}"
          GAMING_ROOM_GAMING_PC_MAC: "${{ secrets.GAMING_ROOM_GAMING_PC_MAC }}"
      - name: Remove disk pressure taint
        run: ./scripts/bin/remove-evicted-pods.sh || true
