bandwidth_usage:
  input_number:
    wan_traffic_delta_in:
      min: 0
      max: 4294967295
    wan_traffic_delta_out:
      min: 0
      max: 4294967295

  sensor:
    - platform: snmp
      name: snmp_wan_in
      host: !secret router_ip
      baseoid: 1.3.6.1.2.1.2.2.1.10.2
      community: "public"
      version: "2c"
      unit_of_measurement: octets
      scan_interval: 10

    - platform: snmp
      name: snmp_wan_out
      host: !secret router_ip
      baseoid: 1.3.6.1.2.1.2.2.1.16.2
      community: "public"
      version: "2c"
      unit_of_measurement: octets
      scan_interval: 10

    - platform: template
      sensors:
        internet_usage_in:
          value_template: "{{ ((states('sensor.snmp_wan_in')  | float ) / 1000000000 ) | round(3) }}"
          unit_of_measurement: "GB"
        internet_usage_out:
          value_template: "{{ ((states('sensor.snmp_wan_out') | float ) / 1000000000 ) | round(3) }}"
          unit_of_measurement: "GB"

  utility_meter:
    daily_internet_usage_in:
      source: sensor.internet_usage_in
      cycle: daily
    daily_internet_usage_out:
      source: sensor.internet_usage_out
      cycle: daily
    monthly_internet_usage_in:
      source: sensor.internet_usage_in
      cycle: monthly
    monthly_internet_usage_out:
      source: sensor.internet_usage_out
      cycle: monthly

  automation:
    - alias: Monitor inbound Internet traffic
      trigger:
        platform: state
        entity_id: sensor.snmp_wan_in
      action:
        - service: input_number.set_value
          data_template:
            entity_id: input_number.wan_traffic_delta_in
            value: "{{ ((trigger.to_state.state | int - trigger.from_state.state | int) * 8 ) / ( as_timestamp(trigger.to_state.last_updated) - as_timestamp(trigger.from_state.last_updated) ) }}"
    - alias: Monitor outbound Internet traffic
      trigger:
        platform: state
        entity_id: sensor.snmp_wan_out
      action:
        - service: input_number.set_value
          data_template:
            entity_id: input_number.wan_traffic_delta_out
            value: "{{ ((trigger.to_state.state | int - trigger.from_state.state | int) * 8 ) / ( as_timestamp(trigger.to_state.last_updated) - as_timestamp(trigger.from_state.last_updated) ) }}"
