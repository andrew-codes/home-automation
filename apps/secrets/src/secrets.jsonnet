
local k = import "github.com/jsonnet-libs/k8s-libsonnet/1.29/main.libsonnet";

{
  "onepassword/server-url": k.core.v1.envVar.fromSecretRef("ONEPASSWORD_SERVER_URL", "onepassword-server-url", 'secret-value'),
  "onepassword/token": k.core.v1.envVar.fromSecretRef("ONEPASSWORD_TOKEN", "onepassword-token", 'secret-value'),
  "onepassword/vault-id": k.core.v1.envVar.fromSecretRef("ONEPASSWORD_VAULT_ID", "onepassword-vault-id", 'secret-value'),
  "code-cov/token": k.core.v1.envVar.fromSecretRef("CODE_COV_TOKEN", "code-cov-token", 'secret-value'),
  "captive-portal/host": k.core.v1.envVar.fromSecretRef("CAPTIVE_PORTAL_HOST", "captive-portal-host", 'secret-value'),
  "captive-portal/port/external": k.core.v1.envVar.fromSecretRef("CAPTIVE_PORTAL_PORT_EXTERNAL", "captive-portal-port-external", 'secret-value'),
  "cloudflare/email": k.core.v1.envVar.fromSecretRef("CLOUDFLARE_EMAIL", "cloudflare-email", 'secret-value'),
  "cloudflare/token": k.core.v1.envVar.fromSecretRef("CLOUDFLARE_TOKEN", "cloudflare-token", 'secret-value'),
  "cloudflare/zone-id": k.core.v1.envVar.fromSecretRef("CLOUDFLARE_ZONE_ID", "cloudflare-zone-id", 'secret-value'),
  "cloudflared/config": k.core.v1.envVar.fromSecretRef("CLOUDFLARED_CONFIG", "cloudflared-config", 'secret-value'),
  "cloudflared/credentials": k.core.v1.envVar.fromSecretRef("CLOUDFLARED_CREDENTIALS", "cloudflared-credentials", 'secret-value'),
  "coder/db/password": k.core.v1.envVar.fromSecretRef("CODER_DB_PASSWORD", "coder-db-password", 'secret-value'),
  "coder/db/username": k.core.v1.envVar.fromSecretRef("CODER_DB_USERNAME", "coder-db-username", 'secret-value'),
  "crowdsec/elastic/password": k.core.v1.envVar.fromSecretRef("CROWDSEC_ELASTIC_PASSWORD", "crowdsec-elastic-password", 'secret-value'),
  "crowdsec/bouncer/nginx/key": k.core.v1.envVar.fromSecretRef("CROWDSEC_BOUNCER_NGINX_KEY", "crowdsec-bouncer-nginx-key", 'secret-value'),
  "crowdsec/api/port/external": k.core.v1.envVar.fromSecretRef("CROWDSEC_API_PORT_EXTERNAL", "crowdsec-api-port-external", 'secret-value'),
  "crowdsec/dashboard/port/external": k.core.v1.envVar.fromSecretRef("CROWDSEC_DASHBOARD_PORT_EXTERNAL", "crowdsec-dashboard-port-external", 'secret-value'),
  "crowdsec/db/name": k.core.v1.envVar.fromSecretRef("CROWDSEC_DB_NAME", "crowdsec-db-name", 'secret-value'),
  "crowdsec/db/password": k.core.v1.envVar.fromSecretRef("CROWDSEC_DB_PASSWORD", "crowdsec-db-password", 'secret-value'),
  "crowdsec/db/username": k.core.v1.envVar.fromSecretRef("CROWDSEC_DB_USERNAME", "crowdsec-db-username", 'secret-value'),
  "crowdsec/elastic/username": k.core.v1.envVar.fromSecretRef("CROWDSEC_ELASTIC_USERNAME", "crowdsec-elastic-username", 'secret-value'),
  "crowdsec/password": k.core.v1.envVar.fromSecretRef("CROWDSEC_PASSWORD", "crowdsec-password", 'secret-value'),
  "crowdsec/username": k.core.v1.envVar.fromSecretRef("CROWDSEC_USERNAME", "crowdsec-username", 'secret-value'),
  "dev/ssh-key/public": k.core.v1.envVar.fromSecretRef("DEV_SSH_KEY_PUBLIC", "dev-ssh-key-public", 'secret-value'),
  "docker-registry/hostname": k.core.v1.envVar.fromSecretRef("DOCKER_REGISTRY_HOSTNAME", "docker-registry-hostname", 'secret-value'),
  "docker-registry/ip": k.core.v1.envVar.fromSecretRef("DOCKER_REGISTRY_IP", "docker-registry-ip", 'secret-value'),
  "docker-registry/machine/username": k.core.v1.envVar.fromSecretRef("DOCKER_REGISTRY_MACHINE_USERNAME", "docker-registry-machine-username", 'secret-value'),
  "docker-registry/name": k.core.v1.envVar.fromSecretRef("DOCKER_REGISTRY_NAME", "docker-registry-name", 'secret-value'),
  "docker-registry/password": k.core.v1.envVar.fromSecretRef("DOCKER_REGISTRY_PASSWORD", "docker-registry-password", 'secret-value'),
  "docker-registry/username": k.core.v1.envVar.fromSecretRef("DOCKER_REGISTRY_USERNAME", "docker-registry-username", 'secret-value'),
  "domain": k.core.v1.envVar.fromSecretRef("DOMAIN", "domain", 'secret-value'),
  "elk-stack/elastic-search/port/external": k.core.v1.envVar.fromSecretRef("ELK_STACK_ELASTIC_SEARCH_PORT_EXTERNAL", "elk-stack-elastic-search-port-external", 'secret-value'),
  "elk-stack/fleet/hostname": k.core.v1.envVar.fromSecretRef("ELK_STACK_FLEET_HOSTNAME", "elk-stack-fleet-hostname", 'secret-value'),
  "elk-stack/fleet/ip": k.core.v1.envVar.fromSecretRef("ELK_STACK_FLEET_IP", "elk-stack-fleet-ip", 'secret-value'),
  "elk-stack/kibana/port/external": k.core.v1.envVar.fromSecretRef("ELK_STACK_KIBANA_PORT_EXTERNAL", "elk-stack-kibana-port-external", 'secret-value'),
  "elk-stack/logstash/password": k.core.v1.envVar.fromSecretRef("ELK_STACK_LOGSTASH_PASSWORD", "elk-stack-logstash-password", 'secret-value'),
  "elk-stack/logstash/port/external": k.core.v1.envVar.fromSecretRef("ELK_STACK_LOGSTASH_PORT_EXTERNAL", "elk-stack-logstash-port-external", 'secret-value'),
  "game-library-db/password": k.core.v1.envVar.fromSecretRef("GAME_LIBRARY_DB_PASSWORD", "game-library-db-password", 'secret-value'),
  "game-library-db/port": k.core.v1.envVar.fromSecretRef("GAME_LIBRARY_DB_PORT", "game-library-db-port", 'secret-value'),
  "game-library-db/username": k.core.v1.envVar.fromSecretRef("GAME_LIBRARY_DB_USERNAME", "game-library-db-username", 'secret-value'),
  "game-room-remote/port/external": k.core.v1.envVar.fromSecretRef("GAME_ROOM_REMOTE_PORT_EXTERNAL", "game-room-remote-port-external", 'secret-value'),
  "gaming-assets-web/port": k.core.v1.envVar.fromSecretRef("GAMING_ASSETS_WEB_PORT", "gaming-assets-web-port", 'secret-value'),
  "gaming-assets-web/host": k.core.v1.envVar.fromSecretRef("GAMING_ASSETS_WEB_HOST", "gaming-assets-web-host", 'secret-value'),
  "gaming-pc/ip": k.core.v1.envVar.fromSecretRef("GAMING_PC_IP", "gaming-pc-ip", 'secret-value'),
  "gaming-pc/machine/username": k.core.v1.envVar.fromSecretRef("GAMING_PC_MACHINE_USERNAME", "gaming-pc-machine-username", 'secret-value'),
  "gaming-pc/machine/password": k.core.v1.envVar.fromSecretRef("GAMING_PC_MACHINE_PASSWORD", "gaming-pc-machine-password", 'secret-value'),
  "gaming-pc/user": k.core.v1.envVar.fromSecretRef("GAMING_PC_USER", "gaming-pc-user", 'secret-value'),
  "github/token": k.core.v1.envVar.fromSecretRef("GITHUB_TOKEN", "github-token", 'secret-value'),
  "github/email": k.core.v1.envVar.fromSecretRef("GITHUB_EMAIL", "github-email", 'secret-value'),
  "github/cr/token": k.core.v1.envVar.fromSecretRef("GITHUB_CR_TOKEN", "github-cr-token", 'secret-value'),
  "grafana/influxdb/token": k.core.v1.envVar.fromSecretRef("GRAFANA_INFLUXDB_TOKEN", "grafana-influxdb-token", 'secret-value'),
  "grafana/password": k.core.v1.envVar.fromSecretRef("GRAFANA_PASSWORD", "grafana-password", 'secret-value'),
  "grafana/port/external": k.core.v1.envVar.fromSecretRef("GRAFANA_PORT_EXTERNAL", "grafana-port-external", 'secret-value'),
  "grafana/username": k.core.v1.envVar.fromSecretRef("GRAFANA_USERNAME", "grafana-username", 'secret-value'),
  "guest-db/port": k.core.v1.envVar.fromSecretRef("GUEST_DB_PORT", "guest-db-port", 'secret-value'),
  "guest-db/password": k.core.v1.envVar.fromSecretRef("GUEST_DB_PASSWORD", "guest-db-password", 'secret-value'),
  "guest-db/username": k.core.v1.envVar.fromSecretRef("GUEST_DB_USERNAME", "guest-db-username", 'secret-value'),
  "guest-pin-codes/calendar-id": k.core.v1.envVar.fromSecretRef("GUEST_PIN_CODES_CALENDAR_ID", "guest-pin-codes-calendar-id", 'secret-value'),
  "guest-pin-codes/client-id": k.core.v1.envVar.fromSecretRef("GUEST_PIN_CODES_CLIENT_ID", "guest-pin-codes-client-id", 'secret-value'),
  "guest-pin-codes/client-secret": k.core.v1.envVar.fromSecretRef("GUEST_PIN_CODES_CLIENT_SECRET", "guest-pin-codes-client-secret", 'secret-value'),
  "guest-pin-codes/door-locks": k.core.v1.envVar.fromSecretRef("GUEST_PIN_CODES_DOOR_LOCKS", "guest-pin-codes-door-locks", 'secret-value'),
  "guest-pin-codes/google-private-key": k.core.v1.envVar.fromSecretRef("GUEST_PIN_CODES_GOOGLE_PRIVATE_KEY", "guest-pin-codes-google-private-key", 'secret-value'),
  "guest-pin-codes/guest-code-index-offset": k.core.v1.envVar.fromSecretRef("GUEST_PIN_CODES_GUEST_CODE_INDEX_OFFSET", "guest-pin-codes-guest-code-index-offset", 'secret-value'),
  "guest-pin-codes/guest-lock-code-exclusions": k.core.v1.envVar.fromSecretRef("GUEST_PIN_CODES_GUEST_LOCK_CODE_EXCLUSIONS", "guest-pin-codes-guest-lock-code-exclusions", 'secret-value'),
  "guest-pin-codes/number-of-guest-codes": k.core.v1.envVar.fromSecretRef("GUEST_PIN_CODES_NUMBER_OF_GUEST_CODES", "guest-pin-codes-number-of-guest-codes", 'secret-value'),
  "guest-pin-codes/tenant-id": k.core.v1.envVar.fromSecretRef("GUEST_PIN_CODES_TENANT_ID", "guest-pin-codes-tenant-id", 'secret-value'),
  "home-assistant/appdaemon/password": k.core.v1.envVar.fromSecretRef("HOME_ASSISTANT_APPDAEMON_PASSWORD", "home-assistant-appdaemon-password", 'secret-value'),
  "home-assistant/appdaemon/url": k.core.v1.envVar.fromSecretRef("HOME_ASSISTANT_APPDAEMON_URL", "home-assistant-appdaemon-url", 'secret-value'),
  "home-assistant/domain": k.core.v1.envVar.fromSecretRef("HOME_ASSISTANT_DOMAIN", "home-assistant-domain", 'secret-value'),
  "home-assistant/elevation": k.core.v1.envVar.fromSecretRef("HOME_ASSISTANT_ELEVATION", "home-assistant-elevation", 'secret-value'),
  "home-assistant/game-room/gaming-pc/ip": k.core.v1.envVar.fromSecretRef("HOME_ASSISTANT_GAME_ROOM_GAMING_PC_IP", "home-assistant-game-room-gaming-pc-ip", 'secret-value'),
  "home-assistant/game-room/gaming-pc/mac": k.core.v1.envVar.fromSecretRef("HOME_ASSISTANT_GAME_ROOM_GAMING_PC_MAC", "home-assistant-game-room-gaming-pc-mac", 'secret-value'),
  "home-assistant/game-room/gaming-pc/machine-username": k.core.v1.envVar.fromSecretRef("HOME_ASSISTANT_GAME_ROOM_GAMING_PC_MACHINE_USERNAME", "home-assistant-game-room-gaming-pc-machine-username", 'secret-value'),
  "home-assistant/game-room/nintendo-switch/ip": k.core.v1.envVar.fromSecretRef("HOME_ASSISTANT_GAME_ROOM_NINTENDO_SWITCH_IP", "home-assistant-game-room-nintendo-switch-ip", 'secret-value'),
  "home-assistant/game-room/nvidia-shield/ip": k.core.v1.envVar.fromSecretRef("HOME_ASSISTANT_GAME_ROOM_NVIDIA_SHIELD_IP", "home-assistant-game-room-nvidia-shield-ip", 'secret-value'),
  "home-assistant/game-room/playstation-5/ip": k.core.v1.envVar.fromSecretRef("HOME_ASSISTANT_GAME_ROOM_PLAYSTATION_5_IP", "home-assistant-game-room-playstation-5-ip", 'secret-value'),
  "home-assistant/game-room/tv/ip": k.core.v1.envVar.fromSecretRef("HOME_ASSISTANT_GAME_ROOM_TV_IP", "home-assistant-game-room-tv-ip", 'secret-value'),
  "home-assistant/game-room/tv/mac": k.core.v1.envVar.fromSecretRef("HOME_ASSISTANT_GAME_ROOM_TV_MAC", "home-assistant-game-room-tv-mac", 'secret-value'),
  "home-assistant/github/token": k.core.v1.envVar.fromSecretRef("HOME_ASSISTANT_GITHUB_TOKEN", "home-assistant-github-token", 'secret-value'),
  "home-assistant/google/calendar/client-id": k.core.v1.envVar.fromSecretRef("HOME_ASSISTANT_GOOGLE_CALENDAR_CLIENT_ID", "home-assistant-google-calendar-client-id", 'secret-value'),
  "home-assistant/google/calendar/client-secret": k.core.v1.envVar.fromSecretRef("HOME_ASSISTANT_GOOGLE_CALENDAR_CLIENT_SECRET", "home-assistant-google-calendar-client-secret", 'secret-value'),
  "home-assistant/ssh-key/private": k.core.v1.envVar.fromSecretRef("HOME_ASSISTANT_SSH_KEY_PRIVATE", "home-assistant-ssh-key-private", 'secret-value'),
  "home-assistant/ssh-key/public": k.core.v1.envVar.fromSecretRef("HOME_ASSISTANT_SSH_KEY_PUBLIC", "home-assistant-ssh-key-public", 'secret-value'),
  "home-assistant/influxdb/token": k.core.v1.envVar.fromSecretRef("HOME_ASSISTANT_INFLUXDB_TOKEN", "home-assistant-influxdb-token", 'secret-value'),
  "home-assistant/github-authorization-header": k.core.v1.envVar.fromSecretRef("HOME_ASSISTANT_GITHUB_AUTHORIZATION_HEADER", "home-assistant-github-authorization-header", 'secret-value'),
  "home-assistant/latitude": k.core.v1.envVar.fromSecretRef("HOME_ASSISTANT_LATITUDE", "home-assistant-latitude", 'secret-value'),
  "home-assistant/longitude": k.core.v1.envVar.fromSecretRef("HOME_ASSISTANT_LONGITUDE", "home-assistant-longitude", 'secret-value'),
  "home-assistant/o365-client-id": k.core.v1.envVar.fromSecretRef("HOME_ASSISTANT_O365_CLIENT_ID", "home-assistant-o365-client-id", 'secret-value'),
  "home-assistant/o365-client-secret": k.core.v1.envVar.fromSecretRef("HOME_ASSISTANT_O365_CLIENT_SECRET", "home-assistant-o365-client-secret", 'secret-value'),
  "home-assistant/port/external": k.core.v1.envVar.fromSecretRef("HOME_ASSISTANT_PORT_EXTERNAL", "home-assistant-port-external", 'secret-value'),
  "home-assistant/server": k.core.v1.envVar.fromSecretRef("HOME_ASSISTANT_SERVER", "home-assistant-server", 'secret-value'),
  "home-assistant/spotcast/dc-2": k.core.v1.envVar.fromSecretRef("HOME_ASSISTANT_SPOTCAST_DC_2", "home-assistant-spotcast-dc-2", 'secret-value'),
  "home-assistant/spotcast/dc": k.core.v1.envVar.fromSecretRef("HOME_ASSISTANT_SPOTCAST_DC", "home-assistant-spotcast-dc", 'secret-value'),
  "home-assistant/spotcast/key-2": k.core.v1.envVar.fromSecretRef("HOME_ASSISTANT_SPOTCAST_KEY_2", "home-assistant-spotcast-key-2", 'secret-value'),
  "home-assistant/spotcast/key": k.core.v1.envVar.fromSecretRef("HOME_ASSISTANT_SPOTCAST_KEY", "home-assistant-spotcast-key", 'secret-value'),
  "home-assistant/spotify/client-id": k.core.v1.envVar.fromSecretRef("HOME_ASSISTANT_SPOTIFY_CLIENT_ID", "home-assistant-spotify-client-id", 'secret-value'),
  "home-assistant/spotify/client-secret": k.core.v1.envVar.fromSecretRef("HOME_ASSISTANT_SPOTIFY_CLIENT_SECRET", "home-assistant-spotify-client-secret", 'secret-value'),
  "home-assistant/time-zone": k.core.v1.envVar.fromSecretRef("HOME_ASSISTANT_TIME_ZONE", "home-assistant-time-zone", 'secret-value'),
  "home-assistant/token": k.core.v1.envVar.fromSecretRef("HOME_ASSISTANT_TOKEN", "home-assistant-token", 'secret-value'),
  "home-assistant/unit-system": k.core.v1.envVar.fromSecretRef("HOME_ASSISTANT_UNIT_SYSTEM", "home-assistant-unit-system", 'secret-value'),
  "home-assistant/url": k.core.v1.envVar.fromSecretRef("HOME_ASSISTANT_URL", "home-assistant-url", 'secret-value'),
  "home-assistant/withings/client-id": k.core.v1.envVar.fromSecretRef("HOME_ASSISTANT_WITHINGS_CLIENT_ID", "home-assistant-withings-client-id", 'secret-value'),
  "home-assistant/withings/client-secret": k.core.v1.envVar.fromSecretRef("HOME_ASSISTANT_WITHINGS_CLIENT_SECRET", "home-assistant-withings-client-secret", 'secret-value'),
  "home-assistant/webrtc/api/port": k.core.v1.envVar.fromSecretRef("HOME_ASSISTANT_WEBRTC_API_PORT", "home-assistant-webrtc-api-port", 'secret-value'),
  "influxdb/bucket": k.core.v1.envVar.fromSecretRef("INFLUXDB_BUCKET", "influxdb-bucket", 'secret-value'),
  "influxdb/org": k.core.v1.envVar.fromSecretRef("INFLUXDB_ORG", "influxdb-org", 'secret-value'),
  "influxdb/org-id": k.core.v1.envVar.fromSecretRef("INFLUXDB_ORG_ID", "influxdb-org-id", 'secret-value'),
  "influxdb/password": k.core.v1.envVar.fromSecretRef("INFLUXDB_PASSWORD", "influxdb-password", 'secret-value'),
  "influxdb/port/external": k.core.v1.envVar.fromSecretRef("INFLUXDB_PORT_EXTERNAL", "influxdb-port-external", 'secret-value'),
  "influxdb/username": k.core.v1.envVar.fromSecretRef("INFLUXDB_USERNAME", "influxdb-username", 'secret-value'),
  "k8s/machine/password": k.core.v1.envVar.fromSecretRef("K8S_MACHINE_PASSWORD", "k8s-machine-password", 'secret-value'),
  "k8s/machine/username": k.core.v1.envVar.fromSecretRef("K8S_MACHINE_USERNAME", "k8s-machine-username", 'secret-value'),
  "k8s/main-node/ip": k.core.v1.envVar.fromSecretRef("K8S_MAIN_NODE_IP", "k8s-main-node-ip", 'secret-value'),
  "k8s/name": k.core.v1.envVar.fromSecretRef("K8S_NAME", "k8s-name", 'secret-value'),
  "k8s/pod-network-cidr": k.core.v1.envVar.fromSecretRef("K8S_POD_NETWORK_CIDR", "k8s-pod-network-cidr", 'secret-value'),
  "k8s/config": k.core.v1.envVar.fromSecretRef("K8S_CONFIG", "k8s-config", 'secret-value'),
  "known-hosts": k.core.v1.envVar.fromSecretRef("KNOWN_HOSTS", "known-hosts", 'secret-value'),
  "mqtt/password": k.core.v1.envVar.fromSecretRef("MQTT_PASSWORD", "mqtt-password", 'secret-value'),
  "mqtt/port/external": k.core.v1.envVar.fromSecretRef("MQTT_PORT_EXTERNAL", "mqtt-port-external", 'secret-value'),
  "mqtt/username": k.core.v1.envVar.fromSecretRef("MQTT_USERNAME", "mqtt-username", 'secret-value'),
  "nfs/ip": k.core.v1.envVar.fromSecretRef("NFS_IP", "nfs-ip", 'secret-value'),
  "nfs/share-path": k.core.v1.envVar.fromSecretRef("NFS_SHARE_PATH", "nfs-share-path", 'secret-value'),
  "onepassword/credentials": k.core.v1.envVar.fromSecretRef("ONEPASSWORD_CREDENTIALS", "onepassword-credentials", 'secret-value'),
  "onepassword/token/connect": k.core.v1.envVar.fromSecretRef("ONEPASSWORD_TOKEN_CONNECT", "onepassword-token-connect", 'secret-value'),
  "paperless/admin/mail": k.core.v1.envVar.fromSecretRef("PAPERLESS_ADMIN_MAIL", "paperless-admin-mail", 'secret-value'),
  "paperless/admin/password": k.core.v1.envVar.fromSecretRef("PAPERLESS_ADMIN_PASSWORD", "paperless-admin-password", 'secret-value'),
  "paperless/admin/user": k.core.v1.envVar.fromSecretRef("PAPERLESS_ADMIN_USER", "paperless-admin-user", 'secret-value'),
  "paperless/port/external": k.core.v1.envVar.fromSecretRef("PAPERLESS_PORT_EXTERNAL", "paperless-port-external", 'secret-value'),
  "paperless/postgres-db": k.core.v1.envVar.fromSecretRef("PAPERLESS_POSTGRES_DB", "paperless-postgres-db", 'secret-value'),
  "paperless/postgres-password": k.core.v1.envVar.fromSecretRef("PAPERLESS_POSTGRES_PASSWORD", "paperless-postgres-password", 'secret-value'),
  "paperless/postgres-user": k.core.v1.envVar.fromSecretRef("PAPERLESS_POSTGRES_USER", "paperless-postgres-user", 'secret-value'),
  "paperless/secret-key": k.core.v1.envVar.fromSecretRef("PAPERLESS_SECRET_KEY", "paperless-secret-key", 'secret-value'),
  "paperless/url": k.core.v1.envVar.fromSecretRef("PAPERLESS_URL", "paperless-url", 'secret-value'),
  "playnite-web/port/external": k.core.v1.envVar.fromSecretRef("PLAYNITE_WEB_PORT_EXTERNAL", "playnite-web-port-external", 'secret-value'),
  "playnite-web/secret": k.core.v1.envVar.fromSecretRef("PLAYNITE_WEB_SECRET", "playnite-web-secret", 'secret-value'),
  "playnite-web/username": k.core.v1.envVar.fromSecretRef("PLAYNITE_WEB_USERNAME", "playnite-web-username", 'secret-value'),
  "playnite-web/password": k.core.v1.envVar.fromSecretRef("PLAYNITE_WEB_PASSWORD", "playnite-web-password", 'secret-value'),
  "playnite-web/staging/port/external": k.core.v1.envVar.fromSecretRef("PLAYNITE_WEB_STAGING_PORT_EXTERNAL", "playnite-web-staging-port-external", 'secret-value'),
  "photoprism/admin/password": k.core.v1.envVar.fromSecretRef("PHOTOPRISM_ADMIN_PASSWORD", "photoprism-admin-password", 'secret-value'),
  "photoprism/admin/username": k.core.v1.envVar.fromSecretRef("PHOTOPRISM_ADMIN_USERNAME", "photoprism-admin-username", 'secret-value'),
  "photoprism/db/password": k.core.v1.envVar.fromSecretRef("PHOTOPRISM_DB_PASSWORD", "photoprism-db-password", 'secret-value'),
  "photoprism/db/root/password": k.core.v1.envVar.fromSecretRef("PHOTOPRISM_DB_ROOT_PASSWORD", "photoprism-db-root-password", 'secret-value'),
  "photoprism/db/username": k.core.v1.envVar.fromSecretRef("PHOTOPRISM_DB_USERNAME", "photoprism-db-username", 'secret-value'),
  "photoprism/port/external": k.core.v1.envVar.fromSecretRef("PHOTOPRISM_PORT_EXTERNAL", "photoprism-port-external", 'secret-value'),
  "pihole/domain": k.core.v1.envVar.fromSecretRef("PIHOLE_DOMAIN", "pihole-domain", 'secret-value'),
  "pihole/hostname": k.core.v1.envVar.fromSecretRef("PIHOLE_HOSTNAME", "pihole-hostname", 'secret-value'),
  "pihole/ip": k.core.v1.envVar.fromSecretRef("PIHOLE_IP", "pihole-ip", 'secret-value'),
  "pihole/password": k.core.v1.envVar.fromSecretRef("PIHOLE_PASSWORD", "pihole-password", 'secret-value'),
  "pihole2/ip": k.core.v1.envVar.fromSecretRef("PIHOLE2_IP", "pihole2-ip", 'secret-value'),
  "proxmox/host/pve": k.core.v1.envVar.fromSecretRef("PROXMOX_HOST_PVE", "proxmox-host-pve", 'secret-value'),
  "proxmox/ip": k.core.v1.envVar.fromSecretRef("PROXMOX_IP", "proxmox-ip", 'secret-value'),
  "proxmox/nameserver": k.core.v1.envVar.fromSecretRef("PROXMOX_NAMESERVER", "proxmox-nameserver", 'secret-value'),
  "proxmox/password": k.core.v1.envVar.fromSecretRef("PROXMOX_PASSWORD", "proxmox-password", 'secret-value'),
  "proxmox/provision/ssh-key/public": k.core.v1.envVar.fromSecretRef("PROXMOX_PROVISION_SSH_KEY_PUBLIC", "proxmox-provision-ssh-key-public", 'secret-value'),
  "proxmox/ssh-key/private": k.core.v1.envVar.fromSecretRef("PROXMOX_SSH_KEY_PRIVATE", "proxmox-ssh-key-private", 'secret-value'),
  "proxmox/ssh-key/public": k.core.v1.envVar.fromSecretRef("PROXMOX_SSH_KEY_PUBLIC", "proxmox-ssh-key-public", 'secret-value'),
  "proxmox/username": k.core.v1.envVar.fromSecretRef("PROXMOX_USERNAME", "proxmox-username", 'secret-value'),
  "ps5/credentials-json": k.core.v1.envVar.fromSecretRef("PS5_CREDENTIALS_JSON", "ps5-credentials-json", 'secret-value'),
  "psn-accounts": k.core.v1.envVar.fromSecretRef("PSN_ACCOUNTS", "psn-accounts", 'secret-value'),
  "repository/name": k.core.v1.envVar.fromSecretRef("REPOSITORY_NAME", "repository-name", 'secret-value'),
  "repository/other/names": k.core.v1.envVar.fromSecretRef("REPOSITORY_OTHER_NAMES", "repository-other-names", 'secret-value'),
  "repository/owner": k.core.v1.envVar.fromSecretRef("REPOSITORY_OWNER", "repository-owner", 'secret-value'),
  "tailscale/auth-key": k.core.v1.envVar.fromSecretRef("TAILSCALE_AUTH_KEY", "tailscale-auth-key", 'secret-value'),
  "tailscale/hostname": k.core.v1.envVar.fromSecretRef("TAILSCALE_HOSTNAME", "tailscale-hostname", 'secret-value'),
  "tailscale/ip": k.core.v1.envVar.fromSecretRef("TAILSCALE_IP", "tailscale-ip", 'secret-value'),
  "tailscale/subnet-routes": k.core.v1.envVar.fromSecretRef("TAILSCALE_SUBNET_ROUTES", "tailscale-subnet-routes", 'secret-value'),
  "tunnel-proxy/auth": k.core.v1.envVar.fromSecretRef("TUNNEL_PROXY_AUTH", "tunnel-proxy-auth", 'secret-value'),
  "tunnel-proxy/cert": k.core.v1.envVar.fromSecretRef("TUNNEL_PROXY_CERT", "tunnel-proxy-cert", 'secret-value'),
  "tunnel-proxy/tunnel-id": k.core.v1.envVar.fromSecretRef("TUNNEL_PROXY_TUNNEL_ID", "tunnel-proxy-tunnel-id", 'secret-value'),
  "unifi/ip": k.core.v1.envVar.fromSecretRef("UNIFI_IP", "unifi-ip", 'secret-value'),
  "unifi/password": k.core.v1.envVar.fromSecretRef("UNIFI_PASSWORD", "unifi-password", 'secret-value'),
  "unifi/port": k.core.v1.envVar.fromSecretRef("UNIFI_PORT", "unifi-port", 'secret-value'),
  "unifi/username": k.core.v1.envVar.fromSecretRef("UNIFI_USERNAME", "unifi-username", 'secret-value'),
  "uptime-kuma/port/external": k.core.v1.envVar.fromSecretRef("UPTIME_KUMA_PORT_EXTERNAL", "uptime-kuma-port-external", 'secret-value'),
  "wifi-porter/account-password": k.core.v1.envVar.fromSecretRef("WIFI_PORTER_ACCOUNT_PASSWORD", "wifi-porter-account-password", 'secret-value'),
  "wifi-porter/api-key": k.core.v1.envVar.fromSecretRef("WIFI_PORTER_API_KEY", "wifi-porter-api-key", 'secret-value'),
  "wifi-porter/location-id": k.core.v1.envVar.fromSecretRef("WIFI_PORTER_LOCATION_ID", "wifi-porter-location-id", 'secret-value'),
  "zigbee2mqtt/port/external": k.core.v1.envVar.fromSecretRef("ZIGBEE2MQTT_PORT_EXTERNAL", "zigbee2mqtt-port-external", 'secret-value'),
  "zwavejs/port/external": k.core.v1.envVar.fromSecretRef("ZWAVEJS_PORT_EXTERNAL", "zwavejs-port-external", 'secret-value'),
  "zwavejs/port/external/web-socket": k.core.v1.envVar.fromSecretRef("ZWAVEJS_PORT_EXTERNAL_WEB_SOCKET", "zwavejs-port-external-web-socket", 'secret-value')
}