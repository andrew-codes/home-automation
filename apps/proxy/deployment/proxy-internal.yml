---
- name: Nginx internal proxy
  hosts: all
  become: true
  become_method: ansible.builtin.sudo
  become_user: root
  gather_facts: true
  connection: ssh
  vars_files:
    - ../.secrets/ansible-secrets.yml

  tasks:
    - name: Update apt
      become_user: root
      become_method: ansible.builtin.sudo
      become: true
      shell: apt-get update --allow-releaseinfo-change

    - name: Installing Prerequisites
      apt:
        name:
          - ca-certificates
          - net-tools
          - gnupg
          - curl
          - qemu-guest-agent
        state: present

    - name: Setup apt key
      apt_key:
        url: https://nginx.org/keys/nginx_signing.key
        state: present

    - name: Add repository
      apt_repository:
        repo: deb https://nginx.org/packages/mainline/ubuntu/ focal nginx
        state: present
        filename: nginx
        mode: "0600"

    - name: Add repository
      apt_repository:
        repo: deb-src https://nginx.org/packages/mainline/ubuntu focal nginx
        state: present
        filename: nginx-src
        mode: "0600"

    - name: Install
      apt:
        name:
          - nginx
          - python3-certbot-nginx
          - python3-pip
        state: present
        update_cache: true

    - name: Remove existing cerbot packages
      apt:
        name:
          - certbot*
        state: absent
        update_cache: true

    - name: Install certbot
      shell: sudo -H pip3 install certbot

    - name: DNS certbot plugin
      shell: sudo -H pip3 install certbot-dns-digitalocean

    - name: Remove broken OpenSSL
      become_user: root
      become_method: ansible.builtin.sudo
      become: true
      file:
        path: /usr/lib/python3/dist-packages/OpenSSL
        state: absent

    - name: Install OpenSSL
      shell: sudo -H pip3 install -U pyopenssl

    - name: Reset secrets directory via deletion
      become_user: root
      become_method: ansible.builtin.sudo
      become: true
      file:
        path: ~/.secrets/certbot
        state: absent

    - name: Secrets directory for certbot
      become_user: root
      become_method: ansible.builtin.sudo
      become: true
      file:
        path: ~/.secrets/certbot
        state: directory

    - name: Copy DNS service account creds
      copy:
        src: ../.secrets/creds.ini
        dest: ~/.secrets/certbot/creds.ini
        owner: root
        group: root
        mode: "0600"

    - name: Remove old configuration
      file:
        path: /etc/nginx/sites-enabled
        state: absent

    - name: Remove old configuration
      file:
        path: /etc/nginx/stream/enabled
        state: absent

    - name: Copy nginx domain configuration
      copy:
        src: ../dist/{{ nginxDir }}/nginx/
        dest: /etc/nginx/
        owner: root
        group: root
        mode: "0644"

    - name: Include modules
      ansible.builtin.lineinfile:
        path: /etc/nginx/nginx.conf
        line: "include /etc/nginx/modules-enabled/*.conf;"
        state: present

    - name: Certs
      shell: 'certbot certonly --non-interactive --agree-tos -d *.smith-simms.family --server https://acme-v02.api.letsencrypt.org/directory --email "{{ cert_email }}" --preferred-challenges=dns --dns-digitalocean --dns-digitalocean-credentials ~/.secrets/certbot/creds.ini'
      become_user: root
      become_method: ansible.builtin.sudo
      become: true

    - name: Renew certs
      become_user: root
      become_method: ansible.builtin.sudo
      become: true
      ansible.builtin.cron:
        name: renew certs
        minute: "0"
        hour: "12"
        job: 'certbot renew --quiet --pre-hook "systemctl stop nginx" --post-hook "systemctl start nginx"'

    - name: Start(ed) on boot
      ansible.builtin.systemd:
        name: nginx
        daemon_reload: true
        enabled: true
        state: restarted

    - name: Set authorized key for github action runner
      authorized_key:
        user: root
        state: present
        key: "{{ lookup('file', '../.secrets/ha.pub') }}"
