---
- hosts: all
  become: true
  become_method: ansible.builtin.sudo
  become_user: root
  gather_facts: true
  remote_user: root
  connection: ssh

  tasks:
    - name: Set hostname
      hostname:
        name: "{{ hostname }}"

    - name: Add myself to /etc/hosts
      lineinfile:
        dest: /etc/hosts
        regexp: '^127\.0\.0\.1[ \t]+localhost'
        line: "127.0.0.1 localhost {{ hostname }}"
        state: present

    - name: Update and upgrade apt
      apt:
        update_cache: yes
        upgrade: full

    - name: Installing Prerequisites
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg-agent
          - gnupg
          - gnupg2
          - jq
          - software-properties-common
          - qemu-guest-agent
        state: present

    - name: Add Dockerâ€™s official GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable
        state: present
        filename: docker
        mode: 0600

    - name: Update and upgrade apt
      apt:
        update_cache: yes
        upgrade: full

    - name: Download yq
      get_url:
        url: https://github.com/mikefarah/yq/releases/download/v4.6.3/yq_linux_amd64
        dest: /usr/bin/yq
        mode: "0755"

    - name: Install Docker Engine
      apt:
        name:
          - docker.io
        state: present

    - name: Enable service docker, and enable persistently
      service:
        name: docker
        enabled: yes

    - name: Setup docker daemon config.
      shell: 'echo ''{ "features": { "buildkit": true }, "exec-opts": ["native.cgroupdriver=systemd"], "log-driver": "json-file", "log-opts": {"max-size": "10m", "max-file": "3"} }'' > /etc/docker/daemon.json'

    - name: Auth data directory
      file:
        path: /data/auth
        state: directory

    - name: Auth file
      copy:
        dest: /data/auth/htpasswd
        content: |-
          {{ auth }}
        owner: root
        group: root
        mode: "0755"

    - name: Restart docker.
      command: "{{ item }}"
      with_items:
        - systemctl daemon-reload
        - systemctl restart docker

    - name: Registry directory
      file:
        path: /data/registry
        state: directory

    - name: Stop registry
      shell: docker stop registry || true

    - name: Remove container
      shell: docker container rm registry || true

    - name: Run registry as service
      shell: >
        docker run -d \
          --name registry \
           --security-opt apparmor=unconfined \
          -v /data/auth:/auth \
          -v /data/registry:/var/lib/registry \
          -e "REGISTRY_AUTH_HTPASSWD_REALM=Registry Realm" \
          -e "REGISTRY_HTTP_ADDR=0.0.0.0:5000" \
          -e "REGISTRY_STORAGE_DELETE_ENABLED=true" \
          -e "REGISTRY_AUTH_HTPASSWD_PATH=/auth/htpasswd" \
          -p 5000:5000 \
          --restart always \
          registry:2.8.1
