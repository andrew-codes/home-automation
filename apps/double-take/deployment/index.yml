---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: double-take-pv-volume
  namespace: default
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 60Gi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: "/mnt/data/double-take"

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: double-take-data-store-pv-claim
  namespace: default
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 60Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: double-take
  namespace: default
  labels:
    app.kubernetes.io/name: double-take
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: double-take
  template:
    metadata:
      labels:
        app.kubernetes.io/name: double-take
    spec:
      tolerations:
        - key: "node.kubernetes.io/disk-pressure"
          operator: "Exists"
          effect: "NoExecute"
          tolerationSeconds: 300
      serviceAccountName: app
      containers:
        - name: double-take
          image: docker-registry:5000/double-take:latest
          imagePullPolicy: Always
          env:
            - name: MQTT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: mqtt-username
                  key: secret-value
            - name: MQTT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mqtt-password
                  key: secret-value
          ports:
            - name: web
              containerPort: 3000
              protocol: TCP
          volumeMounts:
            - name: data-store
              mountPath: "/.storage"
      volumes:
        - name: data-store
          persistentVolumeClaim:
            claimName: double-take-data-store-pv-claim
