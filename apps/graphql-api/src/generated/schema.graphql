### This file was generated by Nexus Schema
### Do not make changes to this file directly


type Game {
  coverImage: String
  description: String
  favorite: Boolean
  gameImagePath: String
  hidden: Boolean
  id: ID
  name: String
  platformId: String
  playtime: Int
  releaseYear: Int
  sourceId: String
  state: String
}

type HomeAssistantArea {
  entities: [HomeAssistantEntity]
  id: ID
  name: String
}

type HomeAssistantDomain implements Node {
  entities: [HomeAssistantEntity]
  id: ID
}

type HomeAssistantEntity {
  area: HomeAssistantArea
  domain: HomeAssistantDomain
  id: ID
  name: String
}

input InputEntities {
  items: [InputEntity]
}

input InputEntity {
  area_id: String
  domain_id: String
  id: String
  name: String
}

input InputServiceCall {
  id: String
  payload: [InputServiceCallPayload]
  service: String
}

input InputServiceCallPayload {
  key: String
  value: String
}

type Mutation {
  homeAssistantCallService(entity: InputServiceCall): HomeAssistantEntity
  renewGuestDevices: [HomeAssistantEntity]
  trackGuestDevice(isPrimary: Boolean = false, mac: String): HomeAssistantEntity
}

interface Node {
  id: ID
}

type Query {
  area(ids: [String]): [HomeAssistantArea]
  domain(ids: [String]): [HomeAssistantDomain]
  entitiy(ids: [String]): [HomeAssistantEntity]
  game(ids: [String]): [Game]
}
