### This file was generated by Nexus Schema
### Do not make changes to this file directly


type Game {
  artworks: [GameImage]
  collection: GameCollection
  cover: GameImage
  favorite: Boolean
  franchise: GameFranchise
  franchises: [GameFranchise]
  gameModes: [GameMode]
  genres: [GameGenre]
  hidden: Boolean
  id: ID
  keywords: [GameKeyword]
  multiplayerModes: [GameMultiplayerMode]
  name: String
  platform: GamePlatform
  playerPerspective: GamePlayerPerspective
  playniteId: String
  playtime: Int
  releaseYear: Int
  slug: String
  source: String
  state: String
  summary: String
}

type GameCollection {
  games: [Game]
  id: ID
  name: String
  slug: String
}

type GameFranchise {
  games: [Game]
  id: ID
  name: String
  slug: String
}

type GameGenre {
  games: [Game]
  id: ID
  name: String
  slug: String
}

type GameImage {
  height: Int
  id: ID
  imageId: String
}

type GameKeyword {
  games: [Game]
  id: ID
  name: String
  slug: String
}

type GameMode {
  games: [Game]
  id: ID
  name: String
  slug: String
}

type GameMultiplayerMode {
  campaigncoop: Boolean
  dropIn: Boolean
  id: ID
  lancoop: Boolean
  offlinecoop: Boolean
  offlinecoopmax: Int
  offlinemax: Int
  onlinecoop: Boolean
  onlinecoopmax: Int
  onlinemax: Int
  splitscreen: Boolean
}

type GamePlatform {
  games: [Game]
  id: ID
  name: String
}

type GamePlayerPerspective {
  id: ID
  name: String
  slug: String
}

type HomeAssistantArea {
  entities: [HomeAssistantEntity]
  id: ID
  name: String
}

type HomeAssistantDomain implements Node {
  entities: [HomeAssistantEntity]
  id: ID
}

type HomeAssistantEntity {
  area: HomeAssistantArea
  domain: HomeAssistantDomain
  id: ID
  name: String
}

input InputEntities {
  items: [InputEntity]
}

input InputEntity {
  area_id: String
  domain_id: String
  id: String
  name: String
}

input InputServiceCall {
  id: String
  payload: [InputServiceCallPayload]
  service: String
}

input InputServiceCallPayload {
  key: String
  value: String
}

type Mutation {
  homeAssistantCallService(entity: InputServiceCall): HomeAssistantEntity
  playGameInGameRoom(id: String): Game
  renewGuestDevices: [HomeAssistantEntity]
  trackGuestDevice(isPrimary: Boolean = false, mac: String): HomeAssistantEntity
}

interface Node {
  id: ID
}

type Query {
  area(ids: [String]): [HomeAssistantArea]
  domain(ids: [String]): [HomeAssistantDomain]
  entitiy(ids: [String]): [HomeAssistantEntity]
  game(ids: [Int]): [Game]
  gameFranchise(ids: [Int]): [GameFranchise]
  gameGenre(ids: [Int]): [GameGenre]
  gameKeyword(ids: [Int]): [GameKeyword]
  gameMode(ids: [Int]): [GameMode]
  gamePlatform(ids: [Int]): [GamePlatform]
}
