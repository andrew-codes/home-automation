---
- name: Ubuntu Cloud Image vm Template
  hosts: all
  become: yes
  become_method: ansible.builtin.sudo
  become_user: root
  gather_facts: yes
  connection: ssh
  remote_user: root
  vars:
    storage: "local-lvm"
    templateName: "ubuntu-noble-cloud-template"
    vmId: 9001
    imageUrl: "https://cloud-images.ubuntu.com/noble/current/noble-server-cloudimg-amd64.img"
    imagePath: "/mnt/pve/nas-iso/noble-server-cloudimg-amd64.img"

  tasks:
    - name: Install prerequisites
      apt:
        name: "{{ item }}"
        state: present
      loop:
        - python3
        - python3-pip
        - python3-venv
        - python3-setuptools
        - python3-proxmoxer
        - python3-requests
        - bash

    - name: Download Ubuntu Cloud Image
      get_url:
        url: "{{ imageUrl }}"
        dest: "{{ imagePath }}"
        mode: "0644"

    - name: Create vm for template
      community.general.proxmox_kvm:
        api_host: "{{ apiHost }}"
        api_user: "{{ apiUser}}"
        api_token_id: "{{ apiTokenId }}"
        api_token_secret: "{{ apiPassword }}"
        node: "{{ node }}"
        vmid: "{{ vmId }}"
        name: "{{ templateName }}"
        memory: 2048
        cores: 2
        net:
          net0: "virtio,bridge=vmbr0"
        scsihw: virtio-scsi-pci
        ostype: "l26"
        ide:
          ide2: "{{ storage }}:cloudinit"
        boot: "order=scsi0"
        vga: qxl
        agent: 1
        serial:
          serial0: socket
        state: present

    - name: Import and attach disk
      shell: |-
        hasDisk=$(qm config {{ vmId }} | grep -c "scsi0: {{ storage }}:vm-{{ vmId }}-disk-0");
        if [ $hasDisk -eq 0 ]; then
          qm importdisk {{ vmId }} {{ imagePath }} {{ storage }};
          qm set {{ vmId }} --scsihw virtio-scsi-pci --scsi0 {{ storage }}:vm-{{ vmId }}-disk-0;
        fi
      args:
        executable: /bin/bash

    - name: Convert vm to template
      shell: |-
        isTemplate=$(qm config {{ vmId }} | grep -c "template: 1");
        if [ $isTemplate -eq 0 ]; then
          qm template {{ vmId }};
        fi
      args:
        executable: /bin/bash
