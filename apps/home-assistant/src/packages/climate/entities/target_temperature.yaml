input_boolean:
  use_user_temp:
    name: Use User Temp
    initial: false

input_number:
  target_low_temp:
    name: Target Low Temp
    initial: 64
    step: 1
    min: 50
    max: 80
    unit_of_measurement: "°F"
    mode: box

  target_high_temp:
    name: Target High Temp
    initial: 70
    step: 1
    min: 50
    max: 80
    unit_of_measurement: "°F"
    mode: box

  user_target_timeout_in_minutes:
    name: "Time to hold user target temperature in minutes"
    initial: 90
    step: 5
    min: 60
    max: 180
    unit_of_measurement: "mins"
    mode: box
  target_daytime_temp_input:
    name: Target Daytime Temperature Input
    initial: 70
    step: 1
    min: 55
    max: 80
    unit_of_measurement: "°F"
    mode: box
  target_nighttime_temp_input:
    name: Target Nightime Temperature Input
    initial: 68
    step: 1
    min: 55
    max: 80
    unit_of_measurement: "°F"
    mode: box
  user_target_daytime_temp_input:
    name: User Target Daytime Temperature Input
    initial: 70
    step: 1
    min: 55
    max: 80
    unit_of_measurement: "°F"
    mode: box
  user_target_nighttime_temp_input:
    name: User Target Nightime Temperature Input
    initial: 68
    step: 1
    min: 55
    max: 80
    unit_of_measurement: "°F"
    mode: box
  target_away_low_temp_input:
    name: Target Away Low Temperature Input
    initial: 60
    step: 1
    min: 55
    max: 80
    unit_of_measurement: "°F"
    mode: box
  target_away_high_temp_input:
    name: Target Away High Temperature Input
    initial: 76
    step: 1
    min: 55
    max: 80
    unit_of_measurement: "°F"
    mode: box

sensor:
  - platform: influxdb
    api_version: 2
    ssl: false
    host: influxdb
    port: 8086
    organization: smith-simms
    token: !secret INFLUXDB_TOKEN
    queries_flux:
      - bucket: home-automation
        name: "Outside temperature qauntile"
        query: >
          filter(fn: (r) => r["domain"] == "weather")
          |> filter(fn: (r) => r["_field"] == "temperature")
          |> filter(fn: (r) => r["entity_id"] == "main_floor")
          |> quantile(q: 0.8, method: "exact_selector")
        range_start: "-4d"

  - platform: template
    sensors:
      outside_temperature:
        friendly_name: Outside Temperature
        unit_of_measurement: °F
        value_template: >
          {{ state_attr('weather.main_floor', 'temperature') }}

      season:
        friendly_name: Hot or cold season
        value_template: >
          {% if ((states("sensor.outside_temperature_qauntile") | int(70)) <= 50) %}
            cold
          {% elif ((states("sensor.outside_temperature_qauntile") | int(70)) > 55) %}
            hot
          {% else %}
            {{ states('sensor.season') }}
          {% endif %}
