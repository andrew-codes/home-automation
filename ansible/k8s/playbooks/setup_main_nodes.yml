---
- hosts: mains
  become: yes
  become_method: sudo
  become_user: root
  gather_facts: yes
  connection: ssh
  remote_user: hl
  vars_files:
    - ../.secrets/setup_k8s.yml

  tasks:
    - name: Intializing Kubernetes Cluster
      command: kubeadm init --pod-network-cidr "{{ pod_network_cidr }}" --apiserver-advertise-address "{{ ansible_default_ipv4.address }}"
      run_once: true
      delegate_to: "{{ ansible_default_ipv4.address }}"

    - pause: seconds=30

    - name: Create directory for kube config.
      become_user: hl
      become_method: sudo
      become: yes
      file:
        path: /home/{{ansible_user }}/.kube
        state: directory
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: 0755

    - name: Copy /etc/kubernetes/admin.conf to user's home directory /home/{{ ansible_user }}/.kube/config.
      become_user: root
      become_method: sudo
      become: yes
      copy:
        src: /etc/kubernetes/admin.conf
        dest: /home/{{ ansible_user }}/.kube/config
        remote_src: yes
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: "0644"

    - pause: seconds=10

    - name: Remove the cache directory.
      become_user: hl
      become_method: sudo
      become: yes
      file:
        path: /home/{{ ansible_user }}/.kube/cache
        state: absent

    - name: Create Pod Network & RBAC.
      become_user: hl
      become_method: sudo
      become: yes
      command: "{{ item }}"
      with_items:
        - kubectl create -f https://docs.projectcalico.org/manifests/tigera-operator.yaml
        - kubectl create -f https://docs.projectcalico.org/manifests/custom-resources.yaml
        - kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml

    - pause: seconds=30

    - name: Get the token for joining the nodes with Kuberentes master.
      shell: kubeadm token create  --print-join-command
      register: kubernetes_join_command

    - debug:
        msg: "{{ kubernetes_join_command.stdout }}"

    - name: Copy join command to local file.
      local_action: copy content="{{ kubernetes_join_command.stdout_lines[0] }}" dest="{{ playbook_dir }}/kubernetes_join_command" mode=0777

    - name: Copy initial setup manifests
      copy:
        src: ./../../../k8s/setup/
        dest: /home/{{ ansible_user }}/
        owner: hl
        mode: "0644"

    - name: Install Arkade
      become_user: root
      become_method: sudo
      become: yes
      shell: curl -sLS https://dl.get-arkade.dev | sh

    - name: Install helm
      become_user: root
      become_method: sudo
      become: yes
      command: "{{ item }}"
      with_items:
        - curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
        - chmod 700 get_helm.sh
        - ./get_helm.sh

    - name: Allow pods on main node
      become_user: hl
      become_method: sudo
      become: yes
      shell: kubectl taint nodes --all node-role.kubernetes.io/master-

    - name: Sealed Secrets
      become_user: hl
      become_method: sudo
      become: yes
      command: "{{ item }}"
      with_items:
        - kubectl apply -f https://github.com/bitnami-labs/sealed-secrets/releases/download/v0.13.1/controller.yaml

    - name: Dashboard
      become_user: hl
      become_method: sudo
      become: yes
      command: "{{ item }}"
      with_items:
        - kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.0.0/aio/deploy/recommended.yaml
        - kubectl apply -f /home/{{ ansible_user }}/dashboard-admin-user.yml

    - name: Inlets
      become_user: hl
      become_method: sudo
      become: yes
      command: "{{ item }}"
      with_items:
        - kubectl create secret generic inlets-access-key --from-file=inlets-access-key=/home/{{ ansible_user }}/.secrets/azure_client_credentials.json.tmp
        - rm -f /home/{{ ansible_user }}/.secrets/azure_client_credentials.json.tmp
        - helm repo add inlets https://inlets.github.io/inlets-operator/
        - helm repo update
        - helm install inlets-operator inlets/inlets-operator --set provider=azure,region=eastus,subscriptionID={{ azure_subscription_id }},inletsProLicense={{ inlets_pro_license }}
        - ark install nginx-ingress
        - ark install cert-manager
        - kubectl apply -f /home/{{ ansible_user }}/lets-encrypt-cert-issuers.yml

    - name: Docker Registry
      become_user: hl
      become_method: sudo
      become: yes
      command: "{{ item }}"
      with_items:
        - ark install docker-registry --username {{ docker_registry_username }} --password {{ docker_registry_password }}
        - ark install docker-registry-ingress --email {{ docker_registry_ingress_email }} --domain {{ docker_registry_ingress_domain }}
