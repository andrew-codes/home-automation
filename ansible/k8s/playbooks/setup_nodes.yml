---
- hosts: mains, workers
  become: yes
  become_method: sudo
  become_user: root
  gather_facts: yes
  connection: ssh
  vars_files:
    - ../.secrets/setup_k8s.yml

  tasks:
    - name: Disabling Swap on all nodes
      shell: swapoff -a

    - name: Commenting Swap entries in /etc/fstab
      replace:
        path: /etc/fstab
        regexp: "(^/.*swap*)"
        replace: '# \1'

    - name: Add IPs to /etc/hosts on master and workers
      lineinfile:
        dest: /etc/hosts
        regexp: ".*{{ item }}$"
        line: "{{ hostvars[item].ansible_host }} {{item}}"
        state: present
      when: hostvars[item].ansible_host is defined
      with_items: "{{ groups.all }}"
    - name: Installing Prerequisites for Kubernetes
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg-agent
          - jq
          - software-properties-common
        state: present

    - name: Add Dockerâ€™s official GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable
        state: present
        filename: docker
        mode: 0600

    - name: Install Docker Engine
      apt:
        name:
          - docker.io
        state: present

    - name: Enable service docker, and enable persistently
      service:
        name: docker
        enabled: yes

    - name: Add Google official GPG key
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present

    - name: Add Kubernetes Repository
      apt_repository:
        repo: deb http://apt.kubernetes.io/ kubernetes-xenial main
        state: present
        filename: kubernetes
        mode: 0600

    - name: Installing Kubernetes Cluster Packages
      apt:
        name:
          - kubeadm
          - kubectl
          - kubelet
        state: present

    - name: Enable service kubelet, and enable persistently
      service:
        name: kubelet
        enabled: yes

    - name: Setup private registry access for nodes.
      command: "{{ item }}"
      with_items:
        - >
          echo '{ "insecure-registries": ["{{ docker_registry_domain }}:5000", "{{ docker_registry_domain }}"], "log-driver": "json-file", "log-opts": {"max-size": "10m", "max-file": "3"} }' > /etc/docker/daemon.json
        - systemctl daemon-reload
        - systemctl restart docker

    - name: Reboot all the kubernetes nodes.
      reboot:
        post_reboot_delay: 10
        reboot_timeout: 40
        connect_timeout: 60
        test_command: uptime
