---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: home-assistant-pv-volume
  namespace: default
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: "/mnt/data/home-assistant"

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: home-assistant-pv-claim
  namespace: default
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10Gi

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: secrets
  namespace: default
data:
  set_ssh_keys.sh: |
    #!/usr/bin env sh
    echo -n "$HOME_AUTOMATION_PRIVATE_SSH_KEY" > /root/.ssh/id_rsa
    echo -n "$HOME_AUTOMATION_PUBLIC_SSH_KEY" > /root/.ssh/id_rsa.pub
    chmod 0600 /root/.ssh/*
  secrets.yaml: |
    {{ with secret "kv/home-assistant" }}
        {{ range $k, $v := .Data }}
    {{ $k }}="{{ $v }}"
        {{ end }}
    {{ end }}
    {{ with secret "kv/mqtt" }}
    MQTT_USERNAME="{{ .Data.USERNAME }}"
    MQTT_PASSWORD="{{ .Data.PASSWORD }}"
    {{ end }}
    {{ with secret "kv/home-assistant" }}
    turn_off_gaming_room_gaming_pc_command: ssh -n -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -i /root/.ssh/id_rsa {{ .Data.GAMING_ROOM_MACHINE_USERNAME }}@{{ .Data.GAMING_ROOM_GAMING_PC_IP }} "C:\Windows\System32\rundll32.exe powrprof.dll,SetSuspendState Standby"
    valheim_ddns_rest_url: "https://{{ .Data.VALHEIM_GOOGLE_DOMAIN_USERNAME }}:{{ .Data.VALHEIM_GOOGLE_DOMAIN_PASSWORD }}@domains.google.com/nic/update?hostname={{ .Data.VALHEIM_DOMAIN }}"
    github_authorization_header: "Bearer {{ .Data.GITHUB_ISSUES_TOKEN }}"
    update_vpn_dns_command: curl -X POST "https://{{ .Data.VPN_DNS_USERNAME }}:{{ .Data.VPN_DNS_PASSWORD }}@domains.google.com/nic/update?hostname={{ .Data.VPN_DOMAIN }}&myip=\$(curl https://checkip.amazonaws.com)"
    {{ end }}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: home-assistant
  namespace: default
  labels:
    app.kubernetes.io/name: home-assistant
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: home-assistant
  template:
    metadata:
      labels:
        app.kubernetes.io/name: home-assistant
      annotations:
        vault.hashicorp.com/agent-inject: 'true'
        vault.hashicorp.com/role: 'app'
        vault.hashicorp.com/agent-configmap: 'secrets'
        vault.hashicorp.com/agent-inject-secret-env.sh: 'kv/home-assistant'
        vault.hashicorp.com/agent-inject-template-env.sh: |
          {{ with secret "kv/mqtt" }}
              {{ range $k, $v := .Data }}
          export {{ $k }}="{{ $v }}"
              {{ end }}
          {{ end }}
    spec:
      serviceAccountName: app
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      imagePullSecrets:
        - name: regcred
      containers:
        - name: home-assistant
          image: docker-registry:5000/home-assistant:latest
          imagePullPolicy: Always
          command:
            - "sh"
          args:
            - "-c"
            - "hass --config /root/config"
          ports:
            - name: api
              containerPort: 8123
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: api
              scheme: HTTP
            initialDelaySeconds: 60
            failureThreshold: 5
            timeoutSeconds: 10
          readinessProbe:
            httpGet:
              path: /
              port: api
              scheme: HTTP
            initialDelaySeconds: 60
            failureThreshold: 5
            timeoutSeconds: 10
          startupProbe:
            httpGet:
              path: /
              port: api
              scheme: HTTP
            failureThreshold: 30
            periodSeconds: 10
          volumeMounts:
            - name: home-assistant-config-volume
              mountPath: /root/config
            - name: ha-secrets-volume
              mountPath: /root/set_ssh_keys.sh
              subPath: set_ssh_keys.sh
            - name: ha-secrets-volume
              mountPath: /root/config/secrets.yaml
              subPath: secrets.yaml
          securityContext:
            privileged: true
            allowPrivilegeEscalation: true

        - name: app-daemon
          image: acockburn/appdaemon:dev
          imagePullPolicy: Always
          command:
            - sh
          args:
            - "-c"
            - "ln -s /root/config/appdaemon.yaml /conf/appdaemon.yaml && ln -s /root/config/apps /conf/apps && ln -s /root/config/dashboards /conf/dashboards && ./dockerStart.sh"
          ports:
            - name: appdaemon
              containerPort: 5050
              protocol: TCP
          volumeMounts:
            - name: home-assistant-config-volume
              mountPath: /root/config
            - name: ha-secrets-volume
              mountPath: /conf/secrets.yaml
              subPath: secrets.yaml

      volumes:
        - name: ha-secrets-volume
          configMap:
            name: secrets
        - name: home-assistant-config-volume
          persistentVolumeClaim:
            claimName: home-assistant-pv-claim

      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: beta.kubernetes.io/arch
                    operator: In
                    values:
                      - amd64

---
apiVersion: v1
kind: Service
metadata:
  name: home-assistant
  namespace: default
  labels:
    app.kubernetes.io/name: home-assistant
spec:
  ports:
    - name: ps4-port-1
      protocol: UDP
      port: 987
      targetPort: 987
    - name: ps4-port-2
      protocol: TCP
      port: 997
      targetPort: 997
    - name: api
      port: 8123
      protocol: TCP
      targetPort: api
    - name: appdaemon
      port: 5050
      protocol: TCP
      targetPort: appdaemon
  selector:
    app.kubernetes.io/name: home-assistant
