apiVersion: v1
kind: ConfigMap
metadata:
  name: mosquitto-config
  namespace: default
data:
  mosquitto.conf: |
    allow_anonymous true
    password_file /mosquitto/passwd
    allow_duplicate_messages false
    listener 1883

    listener 9001
    protocol websockets

    persistence true
    persistence_location /mosquitto/data/
    log_dest file /mosquitto/log/mosquitto.log

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mosquitto-generate-password-script
  namespace: default
data:
  set_credentials.sh: |
    #!/usr/bin env sh
    echo -n "$USERNAME:$PASSWORD" > /mosquitto/passwd
    mosquitto_passwd -U /mosquitto/passwd

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mosquitto-pv-volume
  namespace: default
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/data/mosquitto"

---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: mosquitto-volume-claim
  namespace: default
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mqtt
  labels:
    app: app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app
  template:
    metadata:
      labels:
        app: app
      annotations:
        vault.hashicorp.com/agent-inject: "true"
        vault.hashicorp.com/role: app
        vault.hashicorp.com/agent-inject-status: update
        vault.hashicorp.com/agent-inject-secret-env.sh: kv/mqtt
        vault.hashicorp.com/agent-inject-template-env.sh: |
          {{ with secret "kv/mqtt" }}
              {{ range $k, $v := .Data.data }}
          export {{ $k }}="{{ $v }}"
              {{ end }}
          {{ end }}
    spec:
      serviceAccountName: app
      containers:
        - name: app
          image: eclipse-mosquitto
          imagePullPolicy: Always
          ports:
            - name: default
              containerPort: 1883
            - name: web-socket
              containerPort: 9001
          command:
            - "sh"
          args:
            - "-c"
            - "source /vault/secrets/env.sh && source /mosquitto/set_credentials.sh && /usr/sbin/mosquitto -c /mosquitto/config/mosquitto.conf"
          volumeMounts:
            - name: mosquitto-config
              mountPath: /mosquitto/config/mosquitto.conf
              subPath: mosquitto.conf
            - name: mosquitto-generate-password-script
              mountPath: /mosquitto/set_credentials.sh
              subPath: set_credentials.sh
            - name: mosquitto-data
              mountPath: /mosquitto/data
      volumes:
        - name: mosquitto-config
          configMap:
            name: mosquitto-config
        - name: mosquitto-generate-password-script
          configMap:
            name: mosquitto-generate-password-script
            defaultMode: 0777
        - name: mosquitto-data
          persistentVolumeClaim:
            claimName: mosquitto-volume-claim
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/arch
                    operator: In
                    values:
                      - amd64
