---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: double-take-pv-volume
  namespace: default
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 60Gi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: "/mnt/data/double-take"

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: double-take-data-store-pv-claim
  namespace: default
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 60Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: double-take
  namespace: default
  labels:
    app.kubernetes.io/name: double-take
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: double-take
  template:
    metadata:
      labels:
        app.kubernetes.io/name: double-take
      annotations:
        vault.hashicorp.com/agent-inject: 'true'
        vault.hashicorp.com/role: app
        vault.hashicorp.com/agent-inject-status: update
        vault.hashicorp.com/agent-inject-secret-env.sh: kv/mqtt
        vault.hashicorp.com/agent-inject-template-env.sh: |
          {{ with secret "kv/mqtt" }}
          export MQTT_USERNAME="{{ .Data.USERNAME }}"
          export MQTT_PASSWORD="{{ .Data.PASSWORD }}"
          {{ end }}
    spec:
      serviceAccountName: app
      command:
        - "sh"
      args:
        - "-c"
        - "source /vault/secrets/env.sh && /start.sh"
      containers:
        - name: double-take
          image: docker-registry:5000/double-take:latest
          imagePullPolicy: Always
          ports:
            - name: web
              containerPort: 3000
              protocol: TCP
          volumeMounts:
            - name: data-store
              mountPath: "/.storage"
      volumes:
        - name: data-store
          persistentVolumeClaim:
            claimName: double-take-data-store-pv-claim
