diff --git a/dist/index.js b/dist/index.js
index 42a7d40c36c709b64b7b37c3b702a42ca7d4e750..5167e92b907a53115fd82a7aff4361e1b93ad6f5 100644
--- a/dist/index.js
+++ b/dist/index.js
@@ -1,31 +1,39 @@
-function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }
+function _interopDefault(ex) {
+  return ex && typeof ex === "object" && "default" in ex ? ex["default"] : ex;
+}
 
-var chalk = _interopDefault(require('chalk'));
-var cliCommon = require('@log4brains/cli-common');
-var core = require('@log4brains/core');
-var commander = _interopDefault(require('commander'));
-var init = require('@log4brains/init');
-var cli = require('@log4brains/cli');
-var web = require('@log4brains/web');
+var chalk = _interopDefault(require("chalk"));
+var cliCommon = require("@log4brains/cli-common");
+var core = require("@log4brains/core");
+var commander = _interopDefault(require("commander"));
+var init = require("@log4brains/init");
+var cli = require("@log4brains/cli");
+var web = require("@log4brains/web");
 
-function createGlobalCli({
-  appConsole,
-  version
-}) {
+function createGlobalCli({ appConsole, version }) {
   const program = new commander.Command();
-  program.version(version).description("Log4brains CLI to preview and build your architecture knowledge base.\n" + "You can also manage your ADRs from here (see `log4brains adr --help`).\n\n" + "All the commands should be run from your project's root folder.\n\n" + "Add the `--help` option to any command to see its detailed documentation.");
+  program
+    .version(version)
+    .description(
+      "Log4brains CLI to preview and build your architecture knowledge base.\n" +
+        "You can also manage your ADRs from here (see `log4brains adr --help`).\n\n" +
+        "All the commands should be run from your project's root folder.\n\n" +
+        "Add the `--help` option to any command to see its detailed documentation."
+    );
   const initCli = init.createInitCli({
-    appConsole
+    appConsole,
   });
   const cli$1 = cli.createCli({
-    appConsole
+    appConsole,
   });
   const webCli = web.createWebCli({
-    appConsole
-  });
-  [...initCli.commands, ...cli$1.commands, ...webCli.commands].forEach(cmd => {
-    program.addCommand(cmd);
+    appConsole,
   });
+  [...initCli.commands, ...cli$1.commands, ...webCli.commands].forEach(
+    (cmd) => {
+      program.addCommand(cmd);
+    }
+  );
   return program;
 }
 
@@ -33,7 +41,7 @@ const debug = !!process.env.DEBUG;
 const dev = process.env.NODE_ENV === "development";
 const appConsole = new cliCommon.AppConsole({
   debug,
-  traces: debug || dev
+  traces: debug || dev,
 });
 
 function handleError(err) {
@@ -47,7 +55,13 @@ function handleError(err) {
 
   if (err instanceof core.Log4brainsConfigNotFoundError) {
     appConsole.fatal(`Cannot find ${chalk.bold(".log4brains.yml")}`);
-    appConsole.printlnErr(chalk.red(`You are in the wrong directory or you need to run ${chalk.cyan("log4brains init")}`));
+    appConsole.printlnErr(
+      chalk.red(
+        `You are in the wrong directory or you need to run ${chalk.cyan(
+          "log4brains init"
+        )}`
+      )
+    );
     process.exit(1);
   }
 
@@ -55,16 +69,24 @@ function handleError(err) {
   process.exit(1);
 }
 
-try {
-  // eslint-disable-next-line
-  const pkgVersion = require("../package.json").version;
+const run = (args) => {
+  try {
+    // eslint-disable-next-line
+    const pkgVersion = require("../package.json").version;
 
-  const cli = createGlobalCli({
-    version: pkgVersion,
-    appConsole
-  });
-  cli.parseAsync(process.argv).catch(handleError);
-} catch (e) {
-  handleError(e);
+    const cli = createGlobalCli({
+      version: pkgVersion,
+      appConsole,
+    });
+    cli.parseAsync(args).catch(handleError);
+  } catch (e) {
+    handleError(e);
+  }
+};
+
+if (require.main === module) {
+  run(process.argv);
+  //# sourceMappingURL=index.js.map
 }
-//# sourceMappingURL=index.js.map
+
+module.exports = run;
diff --git a/dist/log4brains b/dist/log4brains
index 2a7ad52bb2bf14d0e11fd1630821243c9b2dff80..968be8f3cc2c4f8e671842aad8d444ca1b6a7331 100755
--- a/dist/log4brains
+++ b/dist/log4brains
@@ -1,16 +1,10 @@
 #!/usr/bin/env node
 const path = require("path");
 const { spawn } = require("child_process");
+const run = require("./index.js");
 
 // Temporary fix of https://github.com/thomvaill/log4brains/issues/85 (legacy md4 hash used by webpack4)
 // that enables us to force the --openssl-legacy-provider NODE_OPTIONS flag without asking the user to do it himself.
 // This is really hacky but will be removed  as soon as we manage to upgrade our dependencies.
-const child = spawn(
-  "node",
-  [path.join(__dirname, "index.js"), ...process.argv.slice(2)],
-  {
-    env: { ...process.env, NODE_OPTIONS: "--openssl-legacy-provider" },
-    cwd: process.cwd(),
-    stdio: "inherit"
-  }
-);
+
+run(process.argv);
